{"version":3,"sources":["components/FeadbackButtons/index.jsx","components/FeadbackStatistics/index.jsx","components/FeadbackContent/index.jsx","App.js","index.js","components/FeadbackContent/styles.module.css","components/FeadbackStatistics/styles.module.css","components/FeadbackButtons/styles.module.css"],"names":["FeadbackButtons","feadbackVariants","onButtonClick","Object","entries","map","element","type","className","styles","button","onClick","FeadbackStatistics","statisticsData","staticticList","staticticItem","FeadbackContent","state","good","neutral","bad","countTotalFeedback","values","reduce","total","elem","countPositiveFeedbackPercentage","Math","round","Number","hendlerFeadbackIncrement","keyName","setState","prevState","bufer","container","title","this","item","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oPAmBeA,EAjBS,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,iBAAkBC,EAAoB,EAApBA,cAG3C,OAAOC,OAAOC,QAAQH,GAAkBI,KAAI,SAACC,GAC3C,OACE,wBAEEC,KAAK,SACLC,UAAWC,IAAOC,OAClBC,QAAS,kBAAMT,EAAcI,EAAQ,KAJvC,SAMGA,EAAQ,IALJA,EAAQ,Q,gBCMNM,EAbY,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAE5B,OACE,oBAAIL,UAAWC,IAAOK,cAAtB,SACGX,OAAOC,QAAQS,GAAgBR,KAAI,SAACC,GAAD,OAChC,qBAAqBE,UAAWC,IAAOM,cAAvC,UACCT,EAAQ,GADT,KACeA,EAAQ,KADdA,EAAQ,U,gBCyCZU,E,4MAzCbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPC,mBAAqB,kBACnBlB,OAAOmB,OAAO,EAAKL,OAAOM,QAAO,SAACC,EAAOC,GAAR,OAAkBD,EAASC,IAAO,I,EAErEC,gCAAkC,WAEhC,OAAqC,IAA9B,EAAKL,qBACR,EACAM,KAAKC,MAAO,IAAMC,OAAO,EAAKZ,MAAMC,MAAS,EAAKG,uB,EAGxDS,yBAA2B,SAACC,GAC1B,EAAKC,UAAS,SAACC,GACb,IAAMC,EAAQ,GAEd,OADAA,EAAMH,GAAWE,EAAUF,GAAW,EAC/BG,M,4CAIX,WACE,OACE,sBAAK1B,UAAWC,IAAO0B,UAAvB,UACE,oBAAI3B,UAAWC,IAAO2B,MAAtB,mCACA,cAAC,EAAD,CACEnC,iBAAkBoC,KAAKpB,MACvBf,cAAemC,KAAKP,2BAEtB,oBAAItB,UAAWC,IAAO2B,MAAtB,wBACA,cAAC,EAAD,CAAoBvB,eAAgBwB,KAAKpB,QACzC,oBAAGT,UAAWC,IAAO6B,KAArB,oBAAmCD,KAAKhB,wBACxC,oBAAGb,UAAWC,IAAO6B,KAArB,gCACsBD,KAAKX,kCAD3B,c,GAnCsBa,aCKfC,MARf,WACE,OACE,qBAAKhC,UAAU,MAAf,SACE,cAAC,EAAD,OCANiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,KAAO,uB,kBCA7FD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,cAAgB,gC,kBCAhFD,EAAOC,QAAU,CAAC,OAAS,0B","file":"static/js/main.1f11357c.chunk.js","sourcesContent":["import styles from \"./styles.module.css\";\r\n\r\nconst FeadbackButtons = ({ feadbackVariants, onButtonClick }) => {\r\n  //   console.log(Object.entries(feadbackVariants));\r\n  //   console.log(styles);\r\n  return Object.entries(feadbackVariants).map((element) => {\r\n    return (\r\n      <button\r\n        key={element[0]}\r\n        type=\"button\"\r\n        className={styles.button}\r\n        onClick={() => onButtonClick(element[0])}\r\n      >\r\n        {element[0]}\r\n      </button>\r\n    );\r\n  });\r\n};\r\n\r\nexport default FeadbackButtons;\r\n","import styles from \"./styles.module.css\";\r\nconst FeadbackStatistics = ({ statisticsData }) => {\r\n  //   console.log(Object.entries(statisticsData));\r\n  return (\r\n    <ul className={styles.staticticList}>\r\n      {Object.entries(statisticsData).map((element) => (\r\n          <li key={element[0]} className={styles.staticticItem}>\r\n          {element[0]}: {element[1]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default FeadbackStatistics;\r\n","import { Component } from \"react\";\r\nimport FeadBackButtons from \"../FeadbackButtons\";\r\nimport FeadbackStatistics from \"../FeadbackStatistics\";\r\nimport styles from \"./styles.module.css\";\r\n\r\nclass FeadbackContent extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  countTotalFeedback = () =>\r\n    Object.values(this.state).reduce((total, elem) => (total += elem), 0);\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    // console.log(this.countTotalFeedback());\r\n    return this.countTotalFeedback() === 0\r\n      ? 0\r\n      : Math.round((100 * Number(this.state.good)) / this.countTotalFeedback());\r\n  };\r\n  // Подумать как оптимизировать функцию, как обойтись без создания объекта.\r\n  hendlerFeadbackIncrement = (keyName) => {\r\n    this.setState((prevState) => {\r\n      const bufer = {};\r\n      bufer[keyName] = prevState[keyName] + 1;\r\n      return bufer;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>Please leave feadback</h2>\r\n        <FeadBackButtons\r\n          feadbackVariants={this.state}\r\n          onButtonClick={this.hendlerFeadbackIncrement}\r\n        />\r\n        <h2 className={styles.title}>Statistics</h2>\r\n        <FeadbackStatistics statisticsData={this.state} />\r\n        <p className={styles.item}>Total: {this.countTotalFeedback()}</p>\r\n        <p className={styles.item}>\r\n          Positive feedback: {this.countPositiveFeedbackPercentage()}&#37;\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FeadbackContent;\r\n","import FeadbackContent from \"./components/FeadbackContent\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FeadbackContent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1WF0A\",\"title\":\"styles_title__3JH6h\",\"item\":\"styles_item__1QnF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"staticticList\":\"styles_staticticList__32UtS\",\"staticticItem\":\"styles_staticticItem__3_xuS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__36vn0\"};"],"sourceRoot":""}